APPNAME  := @@APPNAME@@
DISTNAME := $(APPNAME)-@@VERSION@@-@@ARCH@@
BUILDVER := @@HEAD@@
COMPILER := @@CC@@
INSTDIR  := @@INSTDIR@@/$(APPNAME)
OS       := @@OS@@
HASEXEC  := $(shell which build/$(APPNAME))

ifdef COMPILER
CC       := $(COMPILER)
endif

CFLAGS   := @@CFLAGS@@
LDFLAGS  := @@LDFLAGS@@

SRC      := main.c
OBJ      := $(patsubst %.c, %.o, $(SRC))

ifeq ($(HASEXEC),)
all: appexec
else
all:
	echo 'build/$(APPNAME) compiled'
endif

ifeq ($(OS),Windows)
## to do
else ## Other UNIX

CFLAGS += -D_POSIX_C_SOURCE=200809L

__os_inst:
	install -d $(HOME)/.local/share/applications
	install -m 755 build/$(APPNAME).desktop $(HOME)/.local/share/applications/

tar: all
	mkdir -p dist && cd dist && ln -sf ../ build/$(APPNAME) && tar --exclude='./*/.*' -cf \
	$(DISTNAME).tar $(APPNAME)/vector $(APPNAME)/music $(APPNAME)/sounds $(APPNAME)/$(APPNAME) $(APPNAME)/$(APPNAME).desktop
	rm dist/$(APPNAME)

endif

debug: CFLAGS += -DDEBUG
debug: appexec

run: all
	build/$(APPNAME) -P="$(shell pwd)"

appexec: $(OBJ)
	$(CC) -o build/$(APPNAME) $(CFLAGS) $(^) $(LDFLAGS)
	strip build/$(APPNAME)
	rm -f *.o

$(OBJ): %.o : %.c
	$(CC) -c $(<) $(I) $(CFLAGS)

tar.lzma: tar
	lzma -9 dist/$(DISTNAME).tar

tar.lz: tar
	lzip -9 dist/$(DISTNAME).tar

tar.xz: tar
	xz -9 dist/$(DISTNAME).tar

tar.bz2: tar
	bzip2 --best dist/$(DISTNAME).tar

tar.gz: tar
	gzip --best dist/$(DISTNAME).tar

clean:
	rm -f *.o build/$(APPNAME)

install: all __os_inst
	install -d $(INSTDIR)/sounds
	install -d $(INSTDIR)/music
	install -d $(INSTDIR)/vector
	install -m 755 sounds/* $(INSTDIR)/sounds/
	install -m 755 music/*  $(INSTDIR)/music/
	install -m 755 vector/* $(INSTDIR)/vector/
	install -m 755 build/$(APPNAME) $(INSTDIR)
